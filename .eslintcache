[{"/Users/code/emp/emp-gui-needed/emp-gui/src/index.tsx":"1","/Users/code/emp/emp-gui-needed/emp-gui/src/configs/server.ts":"2","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Main/index.tsx":"3","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/index.tsx":"4","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/demo/demoStore.ts":"5","/Users/code/emp/emp-gui-needed/emp-gui/src/helpers/http.ts":"6","/Users/code/emp/emp-gui-needed/emp-gui/src/components/P404Comp.tsx":"7","/Users/code/emp/emp-gui-needed/emp-gui/src/App.tsx":"8","/Users/code/emp/emp-gui-needed/emp-gui/src/components/RouterComp.tsx":"9","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/config.ts":"10","/Users/code/emp/emp-gui-needed/emp-gui/src/configs/router.ts":"11","/Users/code/emp/emp-gui-needed/emp-gui/src/components/LoadingComp.tsx":"12"},{"size":229,"mtime":1606802658206,"results":"13","hashOfConfig":"14"},{"size":71,"mtime":1606802658205,"results":"15","hashOfConfig":"14"},{"size":563,"mtime":1606805703401,"results":"16","hashOfConfig":"14"},{"size":867,"mtime":1606802658208,"results":"17","hashOfConfig":"14"},{"size":446,"mtime":1606802658207,"results":"18","hashOfConfig":"14"},{"size":293,"mtime":1606814049156,"results":"19","hashOfConfig":"14"},{"size":348,"mtime":1606802658205,"results":"20","hashOfConfig":"14"},{"size":149,"mtime":1606802658204,"results":"21","hashOfConfig":"14"},{"size":1189,"mtime":1606802658205,"results":"22","hashOfConfig":"14"},{"size":202,"mtime":1606802658207,"results":"23","hashOfConfig":"14"},{"size":251,"mtime":1606802658205,"results":"24","hashOfConfig":"14"},{"size":196,"mtime":1606805562479,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16o02zq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/Users/code/emp/emp-gui-needed/emp-gui/src/index.tsx",[],[],"/Users/code/emp/emp-gui-needed/emp-gui/src/configs/server.ts",[],"/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Main/index.tsx",["58","59"],"import React, {useEffect} from 'react'\nimport {useStores} from 'src/stores'\n\nconst Main = () => {\n  const {demoStore} = useStores()\n\n  useEffect(() => {\n    demoStore.getDemoinfo({id: 1606796764967}).then((res: any) => {\n      console.log('demo-get-info-from-db', res)\n    })\n  }, [])\n\n  const onAdd = async () => {\n    const id = +new Date()\n    const name = 'projectname' + id\n    const res = await demoStore.setDemoInfo({id, name})\n    console.log('===done===', res)\n    alert('done')\n  }\n  return <div onClick={() => onAdd()}>add</div>\n}\n\nexport default Main\n","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/index.tsx",["60","61"],"import React, {useContext} from 'react'\nimport {useLocalStore} from 'mobx-react-lite'\nimport configStores, {TconfigStore} from 'src/stores/config'\n\nconst storeContext = React.createContext<TconfigStore | null>(null)\ntype storeProviderPropsType = {\n  children: React.ReactNode\n}\nexport const StoreProvider = ({children}: storeProviderPropsType) => {\n  const Stores: TconfigStore | any = {}\n  for (const k in configStores) {\n    Stores[k] = useLocalStore(configStores[k]) // eslint-disable-line\n  }\n  return <storeContext.Provider value={Stores}>{children}</storeContext.Provider>\n}\n\nexport const useStores = () => {\n  const stores = useContext(storeContext)\n  if (!stores) {\n    // this is especially useful in TypeScript so you don't need to be checking for null all the time\n    throw new Error('useStore must be used within a StoreProvider.')\n  }\n  return stores\n}\n","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/demo/demoStore.ts",["62"],"import http from 'src/helpers/http'\n\nexport const demoStore = () => {\n  return {\n    async getDemoinfo({id}: {id: number}) {\n      const {data} = await http.get(`/demo/search/${id}`)\n      return data\n    },\n    async setDemoInfo({id, name}: {id: number; name: string}) {\n      const {data} = await http.post('/demo/alert', {\n        id,\n        name,\n      })\n      return data\n    },\n  }\n}\nexport type TDemoStore = ReturnType<typeof demoStore>\n","/Users/code/emp/emp-gui-needed/emp-gui/src/helpers/http.ts",[],"/Users/code/emp/emp-gui-needed/emp-gui/src/components/P404Comp.tsx",["63"],"import React from 'react'\nimport {Result, Button} from 'antd'\nimport {Link} from 'react-router-dom'\nconst P404Comp = () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    subTitle=\"找不到相应的页面！\"\n    extra={\n      <Link to=\"/\">\n        <Button type=\"primary\">返回首页</Button>\n      </Link>\n    }\n  />\n)\n\nexport default P404Comp\n","/Users/code/emp/emp-gui-needed/emp-gui/src/App.tsx",["64"],"import React from 'react'\nimport RouterComp from 'src/components/RouterComp'\n\nconst App = () => (\n  <>\n    <RouterComp />\n  </>\n)\nexport default App\n","/Users/code/emp/emp-gui-needed/emp-gui/src/components/RouterComp.tsx",["65","66"],"import React, {Suspense, useEffect} from 'react'\nimport {Route, BrowserRouter as Router, Switch, useLocation} from 'react-router-dom'\nimport LoadingComp from 'src/components/LoadingComp'\nimport P404Comp from 'src/components/P404Comp'\nimport {routes, Troutes} from 'src/configs/router'\n\nconst RoutersComp = () => routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)\n\nconst SwitchMainRouter = () => {\n  return (\n    <Switch>\n      {RoutersComp()}\n      <Route>\n        <P404Comp />\n      </Route>\n    </Switch>\n  )\n}\n\nconst RouterComp = () => {\n  return (\n    <Router>\n      <Suspense fallback={<LoadingComp />}>\n        <SwitchMainRouter />\n      </Suspense>\n    </Router>\n  )\n}\nexport default RouterComp\n\nconst RouteWithSubRoutes = (route: Troutes) => {\n  return (\n    (route.component && (\n      <Route path={route.path} render={props => <route.component {...props} routes={route.routes} />} />\n    )) || <SwitchRouter routes={route.routes} />\n  )\n}\n\nexport const SwitchRouter = ({routes}: {routes?: Array<Troutes>}) => {\n  return (\n    <Switch>\n      {routes && routes.length > 0 && routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)}\n    </Switch>\n  )\n}\n","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/config.ts",[],"/Users/code/emp/emp-gui-needed/emp-gui/src/configs/router.ts",[],"/Users/code/emp/emp-gui-needed/emp-gui/src/components/LoadingComp.tsx",["67"],"import {Spin} from 'antd'\nimport React from 'react'\nimport './LoadingCompStyle.scss'\nconst LoadingComp = () => (\n  <div className=\"loadingComp\">\n    <Spin />\n  </div>\n)\nexport default LoadingComp\n",{"ruleId":"68","severity":1,"message":"69","line":4,"column":14,"nodeType":"70","messageId":"71","endLine":4,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":11,"column":6,"nodeType":"74","endLine":11,"endColumn":8,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"69","line":9,"column":30,"nodeType":"70","messageId":"71","endLine":9,"endColumn":69},{"ruleId":"68","severity":1,"message":"69","line":17,"column":26,"nodeType":"70","messageId":"71","endLine":17,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":3,"column":26,"nodeType":"70","messageId":"71","endLine":3,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":4,"column":18,"nodeType":"70","messageId":"71","endLine":4,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":4,"column":13,"nodeType":"70","messageId":"71","endLine":4,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":20,"column":20,"nodeType":"70","messageId":"71","endLine":20,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":39,"column":29,"nodeType":"70","messageId":"71","endLine":39,"endColumn":69},{"ruleId":"68","severity":1,"message":"69","line":4,"column":21,"nodeType":"70","messageId":"71","endLine":4,"endColumn":26},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'demoStore'. Either include it or remove the dependency array.","ArrayExpression",["76"],{"desc":"77","fix":"78"},"Update the dependencies array to be: [demoStore]",{"range":"79","text":"80"},[281,283],"[demoStore]"]