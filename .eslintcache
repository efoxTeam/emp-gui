[{"/Users/code/emp/emp-gui-needed/emp-gui/src/index.tsx":"1","/Users/code/emp/emp-gui-needed/emp-gui/src/App.tsx":"2","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/index.tsx":"3","/Users/code/emp/emp-gui-needed/emp-gui/src/components/RouterComp.tsx":"4","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/config.ts":"5","/Users/code/emp/emp-gui-needed/emp-gui/src/components/P404Comp.tsx":"6","/Users/code/emp/emp-gui-needed/emp-gui/src/components/LoadingComp.tsx":"7","/Users/code/emp/emp-gui-needed/emp-gui/src/configs/router.ts":"8","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/demo/demoStore.ts":"9","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/project/projectStore.ts":"10","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Project/list.tsx":"11","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Project/detail.tsx":"12","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Remotes/list.tsx":"13","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Remotes/add.tsx":"14","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Remotes/detail.tsx":"15","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Shared/list.tsx":"16","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Shared/add.tsx":"17","/Users/code/emp/emp-gui-needed/emp-gui/src/helpers/http.ts":"18","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Main/index.tsx":"19","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Project/add/index.tsx":"20","/Users/code/emp/emp-gui-needed/emp-gui/src/configs/server.ts":"21"},{"size":229,"mtime":1606802658206,"results":"22","hashOfConfig":"23"},{"size":149,"mtime":1606802658204,"results":"24","hashOfConfig":"23"},{"size":867,"mtime":1606802658208,"results":"25","hashOfConfig":"23"},{"size":1189,"mtime":1606802658205,"results":"26","hashOfConfig":"23"},{"size":324,"mtime":1606828878186,"results":"27","hashOfConfig":"23"},{"size":348,"mtime":1606802658205,"results":"28","hashOfConfig":"23"},{"size":196,"mtime":1606805562479,"results":"29","hashOfConfig":"23"},{"size":1200,"mtime":1606828734725,"results":"30","hashOfConfig":"23"},{"size":446,"mtime":1606802658207,"results":"31","hashOfConfig":"23"},{"size":1174,"mtime":1606829264751,"results":"32","hashOfConfig":"23"},{"size":92,"mtime":1606828458959,"results":"33","hashOfConfig":"23"},{"size":96,"mtime":1606828187908,"results":"34","hashOfConfig":"23"},{"size":92,"mtime":1606828457884,"results":"35","hashOfConfig":"23"},{"size":90,"mtime":1606828456988,"results":"36","hashOfConfig":"23"},{"size":96,"mtime":1606828458224,"results":"37","hashOfConfig":"23"},{"size":92,"mtime":1606828457345,"results":"38","hashOfConfig":"23"},{"size":90,"mtime":1606828456636,"results":"39","hashOfConfig":"23"},{"size":293,"mtime":1606814049156,"results":"40","hashOfConfig":"23"},{"size":563,"mtime":1606805703401,"results":"41","hashOfConfig":"23"},{"size":90,"mtime":1606828458575,"results":"42","hashOfConfig":"23"},{"size":71,"mtime":1606802658205,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"16o02zq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/code/emp/emp-gui-needed/emp-gui/src/index.tsx",[],[],"/Users/code/emp/emp-gui-needed/emp-gui/src/App.tsx",["98"],"import React from 'react'\nimport RouterComp from 'src/components/RouterComp'\n\nconst App = () => (\n  <>\n    <RouterComp />\n  </>\n)\nexport default App\n","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/index.tsx",["99","100"],"import React, {useContext} from 'react'\nimport {useLocalStore} from 'mobx-react-lite'\nimport configStores, {TconfigStore} from 'src/stores/config'\n\nconst storeContext = React.createContext<TconfigStore | null>(null)\ntype storeProviderPropsType = {\n  children: React.ReactNode\n}\nexport const StoreProvider = ({children}: storeProviderPropsType) => {\n  const Stores: TconfigStore | any = {}\n  for (const k in configStores) {\n    Stores[k] = useLocalStore(configStores[k]) // eslint-disable-line\n  }\n  return <storeContext.Provider value={Stores}>{children}</storeContext.Provider>\n}\n\nexport const useStores = () => {\n  const stores = useContext(storeContext)\n  if (!stores) {\n    // this is especially useful in TypeScript so you don't need to be checking for null all the time\n    throw new Error('useStore must be used within a StoreProvider.')\n  }\n  return stores\n}\n","/Users/code/emp/emp-gui-needed/emp-gui/src/components/RouterComp.tsx",["101","102"],"import React, {Suspense, useEffect} from 'react'\nimport {Route, BrowserRouter as Router, Switch, useLocation} from 'react-router-dom'\nimport LoadingComp from 'src/components/LoadingComp'\nimport P404Comp from 'src/components/P404Comp'\nimport {routes, Troutes} from 'src/configs/router'\n\nconst RoutersComp = () => routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)\n\nconst SwitchMainRouter = () => {\n  return (\n    <Switch>\n      {RoutersComp()}\n      <Route>\n        <P404Comp />\n      </Route>\n    </Switch>\n  )\n}\n\nconst RouterComp = () => {\n  return (\n    <Router>\n      <Suspense fallback={<LoadingComp />}>\n        <SwitchMainRouter />\n      </Suspense>\n    </Router>\n  )\n}\nexport default RouterComp\n\nconst RouteWithSubRoutes = (route: Troutes) => {\n  return (\n    (route.component && (\n      <Route path={route.path} render={props => <route.component {...props} routes={route.routes} />} />\n    )) || <SwitchRouter routes={route.routes} />\n  )\n}\n\nexport const SwitchRouter = ({routes}: {routes?: Array<Troutes>}) => {\n  return (\n    <Switch>\n      {routes && routes.length > 0 && routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)}\n    </Switch>\n  )\n}\n","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/config.ts",[],"/Users/code/emp/emp-gui-needed/emp-gui/src/components/P404Comp.tsx",["103"],"import React from 'react'\nimport {Result, Button} from 'antd'\nimport {Link} from 'react-router-dom'\nconst P404Comp = () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    subTitle=\"找不到相应的页面！\"\n    extra={\n      <Link to=\"/\">\n        <Button type=\"primary\">返回首页</Button>\n      </Link>\n    }\n  />\n)\n\nexport default P404Comp\n","/Users/code/emp/emp-gui-needed/emp-gui/src/components/LoadingComp.tsx",["104"],"import {Spin} from 'antd'\nimport React from 'react'\nimport './LoadingCompStyle.scss'\nconst LoadingComp = () => (\n  <div className=\"loadingComp\">\n    <Spin />\n  </div>\n)\nexport default LoadingComp\n","/Users/code/emp/emp-gui-needed/emp-gui/src/configs/router.ts",[],"/Users/code/emp/emp-gui-needed/emp-gui/src/stores/demo/demoStore.ts",["105"],"import http from 'src/helpers/http'\n\nexport const demoStore = () => {\n  return {\n    async getDemoinfo({id}: {id: number}) {\n      const {data} = await http.get(`/demo/search/${id}`)\n      return data\n    },\n    async setDemoInfo({id, name}: {id: number; name: string}) {\n      const {data} = await http.post('/demo/alert', {\n        id,\n        name,\n      })\n      return data\n    },\n  }\n}\nexport type TDemoStore = ReturnType<typeof demoStore>\n","/Users/code/emp/emp-gui-needed/emp-gui/src/stores/project/projectStore.ts",["106"],"import http from 'src/helpers/http'\nimport {Project} from 'src/typing'\n\nexport const projectStore = () => {\n  return {\n    async getProjects() {\n      const {data} = await http.get(`/projects`)\n      return data\n    },\n    async searchProjects({\n      id,\n      name,\n      template,\n      technologyType,\n    }: {\n      id?: string\n      name?: string\n      template?: string\n      technologyType?: string\n    }) {\n      const {data} = await http.get(`/project/search`, {\n        params: {\n          id,\n          name,\n          template,\n          technologyType,\n        },\n      })\n      return data\n    },\n    async addProject(projects: Project[]) {\n      const {data} = await http.post('/project/add', {\n        projects,\n      })\n      return data\n    },\n    async delProject({id}: {id: string}) {\n      const {data} = await http.post('/project/del', {\n        id,\n      })\n      return data\n    },\n    async alterProject({id, content}: {id: string; content: Partial<Project>}) {\n      const {data} = await http.post('/project/alter', {\n        id,\n        content,\n      })\n      return data\n    },\n  }\n}\nexport type TProjectStore = ReturnType<typeof projectStore>\n","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Project/list.tsx",["107"],"import React from 'react'\n\nconst List = () => {\n  return <div></div>\n}\n\nexport default List\n","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Project/detail.tsx",["108"],"import React from 'react'\n\nconst Detail = () => {\n  return <div></div>\n}\n\nexport default Detail\n","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Remotes/list.tsx",["109"],"/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Remotes/add.tsx",["110"],"import React from 'react'\n\nconst Add = () => {\n  return <div></div>\n}\n\nexport default Add\n","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Remotes/detail.tsx",["111"],"/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Shared/list.tsx",["112"],"/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Shared/add.tsx",["113"],"/Users/code/emp/emp-gui-needed/emp-gui/src/helpers/http.ts",[],"/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Main/index.tsx",["114","115"],"import React, {useEffect} from 'react'\nimport {useStores} from 'src/stores'\n\nconst Main = () => {\n  const {demoStore} = useStores()\n\n  useEffect(() => {\n    demoStore.getDemoinfo({id: 1606796764967}).then((res: any) => {\n      console.log('demo-get-info-from-db', res)\n    })\n  }, [])\n\n  const onAdd = async () => {\n    const id = +new Date()\n    const name = 'projectname' + id\n    const res = await demoStore.setDemoInfo({id, name})\n    console.log('===done===', res)\n    alert('done')\n  }\n  return <div onClick={() => onAdd()}>add</div>\n}\n\nexport default Main\n","/Users/code/emp/emp-gui-needed/emp-gui/src/pages/Project/add/index.tsx",["116"],"/Users/code/emp/emp-gui-needed/emp-gui/src/configs/server.ts",[],{"ruleId":"117","severity":1,"message":"118","line":4,"column":13,"nodeType":"119","messageId":"120","endLine":4,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":9,"column":30,"nodeType":"119","messageId":"120","endLine":9,"endColumn":69},{"ruleId":"117","severity":1,"message":"118","line":17,"column":26,"nodeType":"119","messageId":"120","endLine":17,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":20,"column":20,"nodeType":"119","messageId":"120","endLine":20,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":39,"column":29,"nodeType":"119","messageId":"120","endLine":39,"endColumn":69},{"ruleId":"117","severity":1,"message":"118","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":4,"column":21,"nodeType":"119","messageId":"120","endLine":4,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":3,"column":26,"nodeType":"119","messageId":"120","endLine":3,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":4,"column":29,"nodeType":"119","messageId":"120","endLine":4,"endColumn":34},{"ruleId":"117","severity":1,"message":"118","line":3,"column":14,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":3,"column":16,"nodeType":"119","messageId":"120","endLine":3,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":3,"column":14,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":3,"column":13,"nodeType":"119","messageId":"120","endLine":3,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":3,"column":16,"nodeType":"119","messageId":"120","endLine":3,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":3,"column":14,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":3,"column":13,"nodeType":"119","messageId":"120","endLine":3,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":4,"column":14,"nodeType":"119","messageId":"120","endLine":4,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":11,"column":6,"nodeType":"123","endLine":11,"endColumn":8,"suggestions":"124"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":13,"nodeType":"119","messageId":"120","endLine":3,"endColumn":18},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'demoStore'. Either include it or remove the dependency array.","ArrayExpression",["125"],{"desc":"126","fix":"127"},"Update the dependencies array to be: [demoStore]",{"range":"128","text":"129"},[281,283],"[demoStore]"]